#include <iostream>
#include <vld.h>

using std::cin;
using std::cout;
using std::endl;

//Родительский класс
class Progression {
protected:
	double start{}, end{}, dif{}; //первый элемент, второй элемент, разница между двуми членами

public:
	//Подсчет суммы прогрессии 
	virtual double sum() {
		return 0;
	}
};

//Класс для арифметической прогрессии
class Linear: public Progression {
public:
	Linear(double start, double end, double dif) {
		this->start = start;
		this->end = end;
		this->dif = dif;
	}
	//Переопределение метода для подсчета суммы арифметической прогрессии
	double sum() override {
		int n = ((end-start)/dif) +1;
		return ((start + end) * n) / 2;
	}
};

//Класс для геометрической прогрессии
class Exponential: public Progression {
public:
	Exponential(double start, double end, double dif) {
		this->start = start;
		this->end = end;
		this->dif = dif;
	}
	//Переопределение метода для подсчета суммы геометрической прогрессии
	double sum() override {
		return (end * dif - start) / (dif - 1);
	}
};

//Класс для вычисления суммы прогрессий
class Count {
public:
	void calcProg() {
		Progression* prog = nullptr;
		int choose = 1, cinCout{};
		cout << "Введите 1, если хотите ввести данные из консоли, иначе 0: ";
		cin >> cinCout;
		if (cinCout) {
			while (true) {
				double num1{}, num2{}, num3{};
				cout << "Введите 1, если хотите посчитать сумму арифметической прогрессии и 0, если геометрической: ";
				cin >> choose;
				if (choose) {
					cout << "Введите диапозон и разницу для ариметической прогрессии: ";
					cin >> num1 >> num2 >> num3;

					prog = new Linear(num1, num2, num3);
				}
				else {
					cout << "Введите диапозон и разницу для геометрической прогрессии: ";
					cin >> num1 >> num2 >> num3;

					prog = new Exponential(num1, num2, num3);
				}
				cout << "Ответ: " << prog->sum() << endl;
				delete prog;
				cout << "Ввести данные еще раз? Введите 1, если да, иначе 0: ";
				cin >> choose;

				if (!choose) {
					break;
				}
			}
		}
		else {
			cout << "Сумма арифметической прогрессии для диапозона [1, 10] и разницой в 1 равна: ";
			prog = new Linear(1, 10, 1);
			cout << prog->sum() << endl;
			delete prog;
			cout << "Сумма геометрической прогрессии для диапозона [2, 64] и разницой в 2 равна: ";
			prog = new Exponential(2, 64, 2);
			cout << prog->sum() << endl;
			delete prog;
		}
	}
};


int main() {
	setlocale(LC_ALL, "ru");
	Count cl1{};

	cl1.calcProg();

	return 0;
}
